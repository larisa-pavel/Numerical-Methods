function [V,W,eroare]=rational_lanczos(A,B,C,vect)
  %vect=sigma_1,...sigma_m
  [n,n]=size(A);
  S0=inv(A-vect(1)*eye(n))*B;
  R0=transpose(inv(A-vect(1)*eye(n)))*transpose(C);
  [V1,H1]=qr_dec(S0);
  [W1,G1]=qr_dec(R0);
  printf("ITERATIA NUMARUL 1 :\n");
  V1
  W1
  [n,m]=size(vect);
  m=m-1;
  for k=1:m
    if(k<m)
      if(vect(k+1)==Inf)
        S1=A*V1;
        R1=A.'*W1;
      else
        S1=inv(A-vect(k+1)*eye(n))*V1;
        R1=transpose(inv(A-vect(k+1)*eye(n)))*W1;
      endif
      H2=W1.'*S1;
      G2=V1.'*R1;
      S1=S1-V1*H2;
      R1=R1-W1*G2;
      [V2,H2]=qr_dec(S1);
      [W2,G2]=qr_dec(R1);
      [P,D,Q]=svd(W2.'*V2);
      V2=V2*Q*inv(D.^(1/2));
      W2=W2*P*inv(D.^(1/2));
      H2=D.^(1/2)*Q.'*H2;
      G2=D.^(1/2)*P.'*G2;
    else
      if(vect(m+1)==Inf)
        S1=A*B;
        R1=A.'*C.';
      else
        S1=inv(A)*B;
        R1=transpose(inv(A))*C;
      endif
      H2=W1.'*S1;
      G2=V1.'*R1;
      S1=S1-V1*H2;
      R1=R1-W1*G2;
      [V2,H2]=qr_dec(S1);
      [W2,G2]=qr_dec(R1);
      [P,D,Q]=svd(W2.'*V2);
      V2=V2*Q*inv(D.^(1/2));
      W2=W2*P*inv(D.^(1/2));
      H2=D.^(1/2)*Q.'*H2;
      G2=D.^(1/2)*P.'*G2;
    endif
    eroare=H2-H1;
    H1=H2;
    V1=V2;
    G1=G2;
    W1=W2;
    printf("ITERATIA NUMARUL %d :\n",k+1);
    W1
    V1
  endfor
  V=V1;
  W=W1;
endfunction